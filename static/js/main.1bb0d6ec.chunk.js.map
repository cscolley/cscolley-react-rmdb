{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","movieId","clickable","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","value","button","Button","calllback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","console","log","API","movies","prev","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","GlobalStyle","createGlobalStyle","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,MAA0B,6CCA1B,MAA0B,sC,cCE5BA,EAAUC,IAAOC,IAAV,oFAKPC,EAAUF,IAAOC,IAAV,2LASPE,EAAUH,IAAOI,IAAV,2HAQPC,EAAcL,IAAOI,IAAV,0H,OCRTE,EATA,kBACX,cAACP,EAAD,UACI,eAACG,EAAD,WACI,cAACC,EAAD,CAASI,IAAKC,EAAUC,IAAI,cAC5B,cAACJ,EAAD,CAAaE,IAAKG,EAAUD,IAAI,oBCRtCE,EAAU,gCACVC,EAAUC,mCAEVC,EAAe,UAAMH,EAAN,gCAAqCC,EAArC,0BACfG,EAAgB,UAAMJ,EAAN,iCAAsCC,EAAtC,mBAEhBI,EAAiB,UAAML,EAAN,4CAAiDC,GAClEK,EAAS,UAAMN,EAAN,4DAAiEC,GAC1EM,EAAc,UAAMP,EAAN,8CAAmDC,GAEjEO,EAAiB,6BCXVpB,EAAUC,IAAOC,IAAV,8fAMN,qBAAGmB,SAkBJlB,EAAUF,IAAOC,IAAV,sGAMPoB,EAAOrB,IAAOC,IAAV,0kBChBFqB,EAXG,SAAC,GAAD,IAAGF,EAAH,EAAGA,MAAOG,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,KAAjB,OACd,cAAC,EAAD,CAASJ,MAAOA,EAAhB,SACI,cAAC,EAAD,UACI,eAACC,EAAD,WACI,6BAAKE,IACL,4BAAIC,YCRPzB,EAAUC,IAAOC,IAAV,gQAcPC,EAAUF,IAAOC,IAAV,wICJLwB,EAPF,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAX,OACT,eAAC,EAAD,WACI,6BAAKD,IACL,cAAC,EAAD,UAAUC,QCNLC,EAAQ5B,IAAOI,IAAV,iXCSHyB,EAND,SAAC,GAAD,IAAGT,EAAH,EAAGA,MAAH,EAAUU,QAAV,EAAmBC,UAAnB,OACV,8BACI,cAACH,EAAD,CAAOrB,IAAKa,EAAOX,IAAI,mBCLhBuB,ECAQhC,IAAOC,IAAV,mZ,OCFL,MAA0B,wCCE5BF,EAAUC,IAAOC,IAAV,sJAQPC,EAAUF,IAAOC,IAAV,+qBC+BLgC,GAjCG,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAUC,kBAAO,GAgBvB,OAdAC,qBAAU,WACN,IAAGF,EAAQG,QAAX,CAKA,IAAMC,EAAQC,YAAW,WACrBT,EAAcE,KACf,KAEH,OAAO,kBAAMQ,aAAaF,IARtBJ,EAAQG,SAAU,IAUvB,CAACP,EAAeE,IAGf,cAAC,EAAD,UACI,eAAC,EAAD,WACI,qBAAK7B,IAAKsC,EAAYpC,IAAI,gBAC1B,uBACIqC,KAAK,OACLC,YAAY,eACZC,SAAU,SAAAC,GAAK,OAAIZ,EAASY,EAAMC,cAAcC,QAChDA,MAAOf,UChCdrC,GAAUC,IAAOoD,OAAV,6XCSLC,GANA,SAAC,GAAD,IAAG7B,EAAH,EAAGA,KAAM8B,EAAT,EAASA,UAAT,OACX,cAAC,GAAD,CAASR,KAAK,SAASS,QAASD,EAAhC,SACK9B,K,4CCGHgC,GAAgB,CACpBC,OAAQ,OACRC,QAAS,CACP,eAAgB,qBA8DLC,GA1DK,CAClBC,YAAY,WAAD,8BAAE,WAAOC,EAAYC,GAAnB,gBAAAC,EAAA,6DACLC,EAAWH,EAAU,UACpB/C,GADoB,OACF+C,EADE,iBACiBC,GADjB,UAEpB/C,EAFoB,iBAEK+C,GAHrB,SAISG,MAAMD,GAJf,8BAI0BE,OAJ1B,mFAAF,qDAAC,GAMZC,WAAW,WAAD,8BAAE,WAAMrC,GAAN,gBAAAiC,EAAA,6DACJC,EADI,UACUrD,EADV,iBAC0BmB,EAD1B,oBAC6ClB,GAD7C,SAEUqD,MAAMD,GAFhB,8BAE2BE,OAF3B,mFAAF,mDAAC,GAIXE,aAAa,WAAD,8BAAE,WAAMtC,GAAN,gBAAAiC,EAAA,6DACNM,EADM,UACe1D,EADf,iBAC+BmB,EAD/B,4BAC0DlB,GAD1D,SAEQqD,MAAMI,GAFd,8BAEgCH,OAFhC,mFAAF,mDAAC,GAKbI,gBAAgB,WAAD,8BAAE,6BAAAP,EAAA,sEACeE,MAAMjD,GADrB,8BACyCkD,OADzC,cACTK,EADS,yBAERA,EAASC,eAFD,2CAAF,kDAAC,GAIhBC,aAAa,WAAD,8BAAE,WAAOC,EAAcC,EAAUC,GAA/B,kBAAAb,EAAA,6DACNc,EAAW,CACfF,WACAC,WACAJ,cAAeE,GAJL,SAQJT,MAAMhD,EAAD,aAAC,gBACPuC,IADM,IAETsB,KAAMC,KAAKC,UAAUH,MAVb,8BAYVX,OAZU,kBAcHe,QAdG,iCAgBFhB,MAAM/C,EAAD,aAAC,gBACPsC,IADM,IAETsB,KAAMC,KAAKC,UAAU,CAAER,cAAeE,OAlBhC,+BAoBRR,OApBQ,eAeJgB,EAfI,yBAqBHA,GArBG,4CAAF,uDAAC,GAwBbC,UAAU,WAAD,8BAAE,WAAOD,EAAWpD,EAASqB,GAA3B,kBAAAY,EAAA,6DACHC,EADG,UACWrD,EADX,iBAC2BmB,EAD3B,2BACqDlB,EADrD,uBAC2EsE,GAD3E,SAIDjB,MAAMD,EAAD,aAAC,gBACPR,IADM,IAETsB,KAAMC,KAAKC,UAAU,CAAE7B,aANlB,8BAQPe,OARO,cAGHkB,EAHG,yBAUFA,GAVE,2CAAF,uDAAC,ICxDNC,GAAe,CACjBvB,KAAM,EACNwB,QAAS,GACTC,YAAa,EACbC,cAAe,GCTJ,OAA0B,qCC+D1BC,GA1CF,WACT,MFVwB,WACxB,MAAoCtD,mBAAS,IAA7C,mBAAO0B,EAAP,KAAmB3B,EAAnB,KACA,EAA0BC,mBAASkD,IAAnC,mBAAOjD,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOuD,EAAP,KAAgBC,EAAhB,KACA,EAA0BxD,oBAAS,GAAnC,mBAAOyD,EAAP,KAAcC,EAAd,KACA,EAA0C1D,oBAAS,GAAnD,mBAAO2D,EAAP,KAAsBC,EAAtB,KAEAC,QAAQC,IAAIpC,GAEZ,IAAMD,EAAW,yCAAG,WAAOE,GAAP,8BAAAC,EAAA,6DAAaF,EAAb,+BAA0B,GAA1B,SAEZgC,GAAS,GACTF,GAAW,GAHC,SAKSO,GAAItC,YAAYC,EAAYC,GALrC,OAKNqC,EALM,OAOZ9D,GAAS,SAAA+D,GAAI,oCACND,GADM,IAETb,QAASxB,EAAO,EAAP,uBAAesC,EAAKd,SAApB,aAAgCa,EAAOb,UAAvC,aAAsDa,EAAOb,cAT9D,kDAaZO,GAAS,GAbG,QAehBF,GAAW,GAfK,0DAAH,sDAiCjB,OAdAnD,qBAAU,WACNH,EAASgD,IACTzB,EAAY,EAAGC,KAChB,CAACA,IAGJrB,qBAAU,WACFsD,IAEJlC,EAAYxB,EAAM0B,KAAO,EAAGD,GAC5BkC,GAAiB,MAElB,CAACD,EAAejC,EAAYzB,EAAM0B,OAE9B,CAAE1B,QAAOsD,UAASE,QAAO/B,aAAY3B,gBAAe6D,oBEhCoBM,GAAvEjE,EAAR,EAAQA,MAAOsD,EAAf,EAAeA,QAASE,EAAxB,EAAwBA,MAAO/B,EAA/B,EAA+BA,WAAY3B,EAA3C,EAA2CA,cAAe6D,EAA1D,EAA0DA,iBAI1D,OAFAC,QAAQC,IAAI7D,GAETwD,EAAc,0DAGb,sCACM/B,GAAczB,EAAMkD,QAAQ,GAC1B,cAAC,EAAD,CACIlE,MAAK,UAAKD,GAAL,OjBjBH,SiBiBG,OAAsCiB,EAAMkD,QAAQ,GAAGgB,eAC5D/E,MAAOa,EAAMkD,QAAQ,GAAGiB,eACxB/E,KAAMY,EAAMkD,QAAQ,GAAGkB,WAE3B,KACJ,cAAC,GAAD,CAAWtE,cAAeA,IAC1B,cAAC,EAAD,CAAMR,OAAQmC,EAAa,gBAAkB,iBAA7C,SACKzB,EAAMkD,QAAQmB,KAAI,SAAAC,GAAK,OACpB,cAAC,EAAD,CAEI3E,WAAS,EACTX,MACIsF,EAAMC,YACAxF,EjB5Bd,OiB4B6CuF,EAAMC,YACrCC,GAEV9E,QAAS4E,EAAMG,IAPVH,EAAMG,SAWtBnB,GAAW,cAAC,EAAD,IACXtD,EAAM0B,KAAO1B,EAAMmD,cAAgBG,GAChC,cAAC,GAAD,CACIlE,KAAK,YACL8B,UAAW,kBAAMyC,GAAiB,UCtDzCe,GAAcC,YAAH,+vBCiBTC,OAVf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAACH,GAAD,QCVNI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1bb0d6ec.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    background: var(--darkGrey);\r\n    padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    max-width: var(--maxWidth);\r\n    padding: 20px 0;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n    width: 200px;\r\n\r\n    @media screen and (max-width: 500px) {\r\n        width: 150px;\r\n    }\r\n`;\r\n\r\nexport const TMDBLogoImg = styled.img`\r\n    width: 100px;\r\n\r\n    @media screen and (max-width: 500px) {\r\n        width: 80px;\r\n    }\r\n`;","import React from 'react';\r\n\r\nimport RMDBLogo from '../../images/react-movie-logo.svg';\r\nimport TMDBLogo from '../../images/tmdb_logo.svg';\r\n\r\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from './Header.styles';\r\n\r\nconst Header = () => (\r\n    <Wrapper>\r\n        <Content>\r\n            <LogoImg src={RMDBLogo} alt='rmdb-logo' />\r\n            <TMDBLogoImg src={TMDBLogo} alt='tmdb-logo' />\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nexport default Header;","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    background: linear-gradient(\r\n            to bottom,\r\n            rgba(0, 0, 0, 0) 41%,\r\n            rgba(0, 0, 0, 0.65) 100%\r\n        ),\r\n        url(${({ image }) => image}), var(--darkGrey);\r\n    background-size: 100%, cover;\r\n    background-position: center;\r\n    height: 600px;\r\n    position: relative;\r\n    animation: animateHeroImage 1s;\r\n\r\n    @keyframes animateHeroImage {\r\n        from {\r\n            opacity: 0;\r\n        }\r\n        to {\r\n            opacity: 1;\r\n        }\r\n    }\r\n    \r\n`;\r\n\r\nexport const Content = styled.div`\r\n    padding: 20px;\r\n    max-width: var(--maxWidth);\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n    z-index: 100;\r\n    max-width: 700px;\r\n    position: absolute;\r\n    bottom: 40px;\r\n    margin-right: 20px;\r\n    min-height: 100px;\r\n    color: var(--white);\r\n\r\n    h1 {\r\n        font-size: var(--fontSuperBig);\r\n\r\n        @media screen and (max-width: 720px) {\r\n            font-size: var(--fontBig);\r\n        }\r\n    }\r\n\r\n    p {\r\n        font-size: var(--fontMed);\r\n\r\n        @media screen and (max-width: 720px) {\r\n            font-size: var(--fontSmall);\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 720px) {\r\n        max-width: 100%;\r\n    }\r\n`;","import React from 'react';\r\n\r\n// Styles\r\nimport { Wrapper, Content, Text } from './HeroImage.styles';\r\n\r\nconst HeroImage = ({ image, title, text }) => (\r\n    <Wrapper image={image}>\r\n        <Content>\r\n            <Text>\r\n                <h1>{title}</h1>\r\n                <p>{text}</p>\r\n            </Text>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nexport default HeroImage;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    max-width: var(--maxWidth);\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n\r\n    h1 {\r\n        color: var(--medGrey);\r\n\r\n        @media screen and (max-width: 768px) {\r\n            font-size: var(--fontBig);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n    grid-gap: 2rem;\r\n`;\r\n\r\n","import React from 'react';\r\n\r\n// Styles\r\nimport { Wrapper, Content } from './Grid.styles';\r\n\r\nconst Grid = ({ header, children }) => (\r\n    <Wrapper>\r\n        <h1>{header}</h1>\r\n        <Content>{children}</Content>\r\n    </Wrapper>\r\n);\r\n\r\nexport default Grid;","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n    width: 100%;\r\n    max-width: 720px;\r\n    transition: all 0.3s;\r\n    object-fit: cover;\r\n    border-radius: 20px;\r\n    animation: animateThumb 0.5s;\r\n\r\n    :hover {\r\n        opacity: 0.8;\r\n    }\r\n\r\n    @keyframes animateThumb {\r\n        from {\r\n            opacity: 0;\r\n        }\r\n        to {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;","import React from 'react';\r\n\r\n// Styles\r\nimport { Image } from './Thumb.styles';\r\n\r\nconst Thumb = ({ image, movieId, clickable }) => (\r\n    <div>\r\n        <Image src={image} alt='movie-thumb' />\r\n    </div>\r\n);\r\n\r\nexport default Thumb;","import { Spinner } from \"./Spinner.styles\";\r\n\r\nexport default Spinner;","import styled from \"styled-components\";\r\n\r\nexport const Spinner = styled.div`\r\n    border: 5px solid var(--lightGrey);\r\n    border-top: 5px solid var(--medGrey);\r\n    border-radius: 50%;\r\n    width: 50px;\r\n    height: 50px;\r\n    animation: spin 0.8s linear infinite;\r\n    margin: 20px auto;\r\n\r\n    @keyframes spin {\r\n        0% {\r\n            transform: rotate(0deg);\r\n        }\r\n        100% {\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n`;","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100px;\r\n    background: var(--darkGrey);\r\n    padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    position: relative;\r\n    max-width: var(--maxWidth);\r\n    width: 100%;\r\n    height: 55px;\r\n    background: var(--medGrey);\r\n    margin: 0 auto;\r\n    border-radius: 40px;\r\n    color: var(--white);\r\n\r\n    img {\r\n        position: absolute;\r\n        left: 15px;\r\n        top: 14px;\r\n        width: 30px;\r\n    }\r\n\r\n    input {\r\n        font-size: var(--fontBig);\r\n        position: absolute;\r\n        left: 0;\r\n        margin: 8px 0;\r\n        padding: 0 0 0 60px;\r\n        border: 0;\r\n        width: 95%;\r\n        background: transparent;\r\n        height: 40px;\r\n        color: var(--white);\r\n\r\n        :focus {\r\n            outline: none;\r\n        }\r\n    }\r\n`;","import React, { useState, useEffect, useRef } from 'react';\r\n\r\n// Image\r\nimport searchIcon from '../../images/search-icon.svg';\r\n\r\n// Styles\r\nimport { Wrapper, Content } from './SearchBar.styles';\r\n\r\nconst SearchBar = ({ setSearchTerm }) => {\r\n    const [state, setState] = useState('');\r\n    const initial = useRef(true);\r\n\r\n    useEffect(() => {\r\n        if(initial.current) {\r\n            initial.current = false;\r\n            return;\r\n        }\r\n\r\n        const timer = setTimeout(() => {\r\n            setSearchTerm(state);\r\n        }, 500);\r\n\r\n        return () => clearTimeout(timer);\r\n\r\n    }, [setSearchTerm, state]);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Content>\r\n                <img src={searchIcon} alt='search-icon' />\r\n                <input \r\n                    type='text'\r\n                    placeholder='Search Movie'\r\n                    onChange={event => setState(event.currentTarget.value)}\r\n                    value={state}\r\n                />\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default SearchBar;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.button`\r\n    display: block;\r\n    background: var(--darkGrey);\r\n    width: 25%;\r\n    min-width: 200px;\r\n    height: 60px;\r\n    border-radius: 30px;\r\n    color: var(--white);\r\n    border: 0;\r\n    font-size: var(--fontBig);\r\n    margin: 20px auto;\r\n    transition: all 0.3s;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n        opacity: 0.8;\r\n    }\r\n`;","import React from 'react';\r\n\r\n// Styles\r\nimport { Wrapper } from './Button.styles';\r\n\r\nconst Button = ({ text, calllback }) => (\r\n    <Wrapper type='button' onClick={calllback}>\r\n        {text}\r\n    </Wrapper>\r\n);\r\n\r\nexport default Button;","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","import { useState, useEffect, useRef } from \"react\";\r\n\r\n// API\r\nimport API from '../API';\r\n\r\nconst initialState = {\r\n    page: 0,\r\n    results: [],\r\n    total_pages: 0,\r\n    total_results: 0\r\n};\r\n\r\nexport const useHomeFetch = () => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [state, setState] = useState(initialState);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n\r\n    console.log(searchTerm);\r\n\r\n    const fetchMovies = async (page, searchTerm = \"\") => {\r\n        try {\r\n            setError(false);\r\n            setLoading(true);\r\n\r\n            const movies = await API.fetchMovies(searchTerm, page);\r\n\r\n            setState(prev => ({\r\n                ...movies,\r\n                results: page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\r\n            }));\r\n\r\n        } catch(error) {\r\n            setError(true);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    // Initial and search\r\n    useEffect(() => {\r\n        setState(initialState);\r\n        fetchMovies(1, searchTerm);\r\n    }, [searchTerm]);\r\n    \r\n    // Load more\r\n    useEffect(() => {\r\n        if(!isLoadingMore) return;\r\n\r\n        fetchMovies(state.page + 1, searchTerm);\r\n        setIsLoadingMore(false);\r\n\r\n    }, [isLoadingMore, searchTerm, state.page]);\r\n\r\n    return { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore };\r\n};","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React from 'react';\r\n\r\n// Config\r\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from '../config';\r\n\r\n// Components\r\nimport HeroImage from './HeroImage';\r\nimport Grid from './Grid';\r\nimport Thumb from './Thumb';\r\nimport Spinner from './Spinner';\r\nimport SearchBar from './SearchBar';\r\nimport Button from './Button';\r\n\r\n\r\n// Hook\r\nimport { useHomeFetch } from '../hooks/useHomeFetch';\r\n\r\n\r\n// Image\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nconst Home = () => {\r\n    const { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore } = useHomeFetch();\r\n    \r\n    console.log(state);\r\n\r\n    if(error) return <div>Something went wrong...</div>;\r\n\r\n    return (\r\n        <>\r\n            {!searchTerm && state.results[0] ? (\r\n                <HeroImage \r\n                    image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n                    title={state.results[0].original_title}\r\n                    text={state.results[0].overview}\r\n                />\r\n            ) : null}\r\n            <SearchBar setSearchTerm={setSearchTerm} />\r\n            <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\r\n                {state.results.map(movie => (\r\n                    <Thumb \r\n                        key={movie.id}\r\n                        clickable\r\n                        image={\r\n                            movie.poster_path\r\n                                ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\r\n                                : NoImage\r\n                        }\r\n                        movieId={movie.id}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n            {loading && <Spinner />}\r\n            {state.page < state.total_pages && !loading && (\r\n                <Button \r\n                    text='Load More'\r\n                    calllback={() => setIsLoadingMore(true)}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    :root {\r\n        --maxWidth: 1280px;\r\n        --white: #fff;\r\n        --lightGrey: #eee;\r\n        --medGrey: #353535;\r\n        --darkGrey: #1c1c1c;\r\n        --fontSuperBig: 2.5rem;\r\n        --fontBig: 1.5rem;\r\n        --fontMed: 1.2rem;\r\n        --fontSmall: 1rem;\r\n    }\r\n\r\n    * {\r\n        box-sizing: border-box;\r\n        font-family: \"Abel\", sans-serif;\r\n    }\r\n\r\n    body {\r\n        margin: 0;\r\n        padding: 0;\r\n\r\n        h1 {\r\n            font-size: 2rem;\r\n            font-weight: 600;\r\n            color: var(--white);\r\n        }\r\n\r\n        h3 {\r\n            font-size: 1.1.rem;\r\n            font-weight: 600;\r\n        }\r\n\r\n        p {\r\n            font-size: 1rem;\r\n            color: var(--white);\r\n        }\r\n    }\r\n\r\n\r\n`;","import React from 'react';\n\n// Components\nimport Header from './components/Header';\nimport Home from './components/Home';\n\n// Styles\nimport { GlobalStyle } from './GlobalStyle';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />\n      <GlobalStyle />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}